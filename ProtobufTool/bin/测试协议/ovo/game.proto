syntax            = "proto3";
option go_package = "./;common";
import "enumeration.proto";
package game;

// 获取手机验证码
// C2S_MsgID=1@5
message C2SVerificationCodeReq {
    string phone = 1;  // 电话号码
}

// 返回获取的验证码
// S2C_MsgID=1@104
message S2CVerificationCodeResp {
    bool result = 1;  // 是否获取成功
}

// 用户登录
// C2S_MsgID=100@1
message C2SMsgLoginReq {
    string account                    = 1;  // 账号/微信号/电话号码
    enumeration.LoginRetReq loginType = 2;  // 登录类型 [ 必填 ]
    string verification               = 3;  // 验证码 [ 非必填 ]
    string password                   = 4;  // 密码 [ 必填 微信/电话号码 为成功返回的密码 ]
}

// 服务器返回登录信息
// S2C_MsgID=100@101
message S2CMsgLoginResp {
    enumeration.LoginRetResp result = 1;  // 登录错误枚举
    uint32 uId                      = 2;  // 玩家id
    string account                  = 3;  // 玩家账号
    string password                 = 4;  // 登录密码
    string wechat                   = 5;  // 微信账号
    string phone                    = 6;  // 电话号码
    uint64 roomId                   = 7;  // 当前所在房间
}

// 服务器返回客户端IP
// S2C_MsgID=100@104
message S2CGetCliIPResp {
    string cliIp = 1;  // 玩家IP
}

// 服务器返回默认服装
// S2C_MsgID=100@108
message S2CDefaultClothing {
    repeated uint32 Men    = 1;  // 默认男服装list
    repeated uint32 Female = 2;  // 默认女装list
}

// 服务器返回清除服装红点
// S2C_MsgID=100@116
message S2CRemoveDressedRedDotResp {
    bool result = 1;  // 清除状态 true 清除成功 false 清除失败
}

message PbMailOne {
    int64 ID                  = 1;  // 邮件ID，同时也是创建时间，纳秒
    uint32 Type               = 2;  // 类型MAIL_TYPE_READED、MAIL_TYPE_SYSTEM
    uint32 EmailID            = 3;  // emailID表的emailID
    uint32 Et                 = 4;  // 到期时间
    uint32 SenderID           = 5;  // 邮件发送者的UserID
    string SenderName         = 6;  // 发送者名字
    repeated uint32 BodyData  = 7;  // 邮件内容数据（配合表emailID）
    repeated string BodyData2 = 8;  // 邮件内容数据（配合表emailID）
    repeated uint32 ItemLst   = 9;  // 邮件附加物品列表[ItemID,ItemCount...]
}
// S2C_MsgID=110@101
message S2CMailInfo {
    uint32 Result            = 1;  // 返回信息，因为邮件到期会被删除，所以必须一次性返回所有邮件。0成功，1失败，
    repeated PbMailOne Lst   = 2;  // 邮件列表，按收到邮件时间的倒序
    repeated PbMailOne GmLst = 3;  // GM邮件列表
}

// C2S_MsgID=110@2
message C2SMailRead {
                int64        ID    = 1; // 邮件ID
    enumeration.MailTypeResp Types = 2; // 邮件类型
}
// S2C_MsgID=110@103
message S2CMailRead {
    uint32 Result = 1;  // 返回信息，0成功，1失败，2邮件已是已读状态，3未找到邮件，4背包容量不足
    int64 ID      = 2;  // 邮件ID
}

// C2S_MsgID=110@3
message C2SMailGet {
                int64        ID    = 1; // 邮件ID
    enumeration.MailTypeResp Types = 2; // 邮件类型
}
// S2C_MsgID=110@104
message S2CMailGet {
    uint32 Result = 1;  // 返回信息，0成功，1失败，2邮件物品已领取过，3未找到邮件，4仓库容量不够
    int64 ID      = 2;
}

// C2S_MsgID=110@4
message C2SMailDel {
    int64 ID = 1;
}
// S2C_MsgID=110@105
message S2CMailDel {
    uint32 Result = 1;  // 返回信息，0成功，1失败，2邮件是未读状态或者有物品未领取，不能删除，3未找到邮件
    int64 ID      = 2;
}

// S2C_MsgID=110@107
message S2CMailGetAll {
    uint32 Result = 1;  // 返回信息，0成功，1失败，2仓库容量不够
}

// S2C_MsgID=110@108
message S2CMailDelAll {
    uint32 Result = 1;  // 返回信息，0成功，1失败
}

// S2C_MsgID=100@109
message S2CGetNotice {
    uint32 Result = 1;  // 返回信息，0成功
    string Body   = 2;  // 系统公告内容
}

message PbPaoMaDengOne {
    uint32 TimeBegin       = 1;  // 跑马灯开始的utc时间
    uint32 TimeEnd         = 2;  // 跑马灯结束的utc时间
    uint32 TimeInterval    = 3;  // 循环播放的时间间隔（单位：秒），0表示不循环播放
    string Body            = 4;  // 内容
    repeated string LstStr = 5;  // 附加的字符串参数
    repeated int32 LstInt  = 6;  // 附加的数字参数，如果涉及浮点数坐标，数字为*100取整
}

// S2C_MsgID=100@110
message S2CGetPaoMaDengLst {
    uint32 Result               = 1;  // 返回信息，0成功
    repeated PbPaoMaDengOne Lst = 2;  // 跑马灯的列表
}
